#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ TeammatesFinder –Ω–∞ GitHub Pages
–°–æ–∑–¥–∞–µ—Ç —Å—Ç–∞—Ç–∏—á–µ—Å–∫—É—é –≤–µ—Ä—Å–∏—é –¥–ª—è Mini App
"""

import os
import json
import shutil

def create_static_version():
    """–°–æ–∑–¥–∞—Ç—å —Å—Ç–∞—Ç–∏—á–µ—Å–∫—É—é –≤–µ—Ä—Å–∏—é –¥–ª—è GitHub Pages"""
    
    print("üöÄ –°–æ–∑–¥–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫—É—é –≤–µ—Ä—Å–∏—é –¥–ª—è GitHub Pages...")
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –¥–µ–ø–ª–æ—è
    if os.path.exists('docs'):
        shutil.rmtree('docs')
    os.makedirs('docs')
    
    # –ö–æ–ø–∏—Ä—É–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ —Ñ–∞–π–ª—ã
    shutil.copytree('frontend', 'docs', dirs_exist_ok=True)
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—É—é –≤–µ—Ä—Å–∏—é –±–µ–∑ backend
    create_standalone_app()
    
    print("‚úÖ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è –≤–µ—Ä—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞ –≤ –ø–∞–ø–∫–µ 'docs'")
    print("")
    print("üìã –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –î–ï–ü–õ–û–Æ:")
    print("1. –°–æ–∑–¥–∞–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞ GitHub")
    print("2. –ó–∞–≥—Ä—É–∑–∏ –≤—Å–µ —Ñ–∞–π–ª—ã")
    print("3. –ó–∞–π–¥–∏ –≤ Settings ‚Üí Pages")
    print("4. Source: Deploy from a branch")
    print("5. Branch: main")
    print("6. Folder: /docs")
    print("7. –ü–æ–ª—É—á–∏—à—å URL: https://username.github.io/repository")
    print("8. –£–∫–∞–∂–∏ —ç—Ç–æ—Ç URL –≤ @BotFather")

def create_standalone_app():
    """–°–æ–∑–¥–∞—Ç—å –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±–µ–∑ backend"""
    
    # –ü—Ä–æ—Å—Ç—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_data = {
        "players": [
            {
                "user_id": 1,
                "display_name": "ProGamer2024",
                "age_group": "21-25",
                "bio": "–ò—â—É –∫–æ–º–∞–Ω–¥—É –¥–ª—è CS2 –∏ Valorant. –ò–≥—Ä–∞—é –Ω–∞ –≤—ã—Å–æ–∫–æ–º —É—Ä–æ–≤–Ω–µ, –æ–±—â–∏—Ç–µ–ª—å–Ω—ã–π.",
                "games": [
                    {"name": "Counter-Strike 2", "emoji": "üî´", "skill_level": "–ü—Ä–æ—Ñ–∏"},
                    {"name": "Valorant", "emoji": "‚ö°", "skill_level": "–û–ø—ã—Ç–Ω—ã–π"}
                ],
                "play_times": ["–í–µ—á–µ—Ä–æ–º", "–í—ã—Ö–æ–¥–Ω—ã–µ"],
                "looking_for": "–ö–æ–º–∞–Ω–¥–∞",
                "contacts": {"discord": "ProGamer#1234"}
            },
            {
                "user_id": 2,
                "display_name": "CasualGirl",
                "age_group": "18-25", 
                "bio": "–õ—é–±–ª—é –∏–≥—Ä–∞—Ç—å –≤ Minecraft –∏ Among Us. –ò—â—É –¥—Ä—É–∂–µ—Å–∫—É—é –∫–æ–º–ø–∞–Ω–∏—é –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–Ω—ã—Ö –∏–≥—Ä.",
                "games": [
                    {"name": "Minecraft", "emoji": "üü´", "skill_level": "–õ—é–±–∏—Ç–µ–ª—å"},
                    {"name": "Among Us", "emoji": "üöÄ", "skill_level": "–û–ø—ã—Ç–Ω—ã–π"}
                ],
                "play_times": ["–î–Ω–µ–º", "–í–µ—á–µ—Ä–æ–º"],
                "looking_for": "–ö–æ–º–ø–∞–Ω–∏—è",
                "contacts": {"discord": "CasualGirl#5678"}
            },
            {
                "user_id": 3,
                "display_name": "DotaKing",
                "age_group": "26-30",
                "bio": "–ò–≥—Ä–∞—é –≤ Dota 2 —É–∂–µ 8 –ª–µ—Ç. Ancient —Ä–∞–Ω–≥. –ò—â—É –ø–æ—Å—Ç–æ—è–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É –¥–ª—è –∫–∞—Ç–∫–∏.",
                "games": [
                    {"name": "Dota 2", "emoji": "üî¥", "skill_level": "–ü—Ä–æ—Ñ–∏"}
                ],
                "play_times": ["–í–µ—á–µ—Ä–æ–º", "–ù–æ—á—å—é"],
                "looking_for": "–ö–æ–º–∞–Ω–¥–∞",
                "contacts": {"discord": "DotaKing#9999", "steam": "dotaking"}
            }
        ]
    }
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    with open('docs/data.js', 'w', encoding='utf-8') as f:
        f.write(f'window.TEST_DATA = {json.dumps(test_data, ensure_ascii=False, indent=2)};')
    
    # –°–æ–∑–¥–∞–µ–º —É–ø—Ä–æ—â–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é app.js
    standalone_js = '''
// –ê–≤—Ç–æ–Ω–æ–º–Ω–∞—è –≤–µ—Ä—Å–∏—è TeammatesFinder –¥–ª—è GitHub Pages

class StandaloneApp {
    constructor() {
        this.currentUser = null;
        this.currentPlayers = window.TEST_DATA.players || [];
        this.currentPlayerIndex = 0;
        this.matches = [];
        this.init();
    }
    
    init() {
        console.log('–ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–π –≤–µ—Ä—Å–∏–∏ TeammatesFinder...');
        
        // –°–∫—Ä—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏
        this.showScreen('profile-setup');
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        this.setupEventListeners();
        this.setupProfileForm();
    }
    
    setupEventListeners() {
        // –§–æ—Ä–º–∞ –ø—Ä–æ—Ñ–∏–ª—è
        document.getElementById('profile-form')?.addEventListener('submit', (e) => {
            e.preventDefault();
            this.createProfile();
        });
        
        // –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        document.getElementById('like-btn')?.addEventListener('click', () => {
            this.likePlayer();
        });
        
        document.getElementById('dislike-btn')?.addEventListener('click', () => {
            this.dislikePlayer();
        });
        
        document.getElementById('info-btn')?.addEventListener('click', () => {
            this.showPlayerInfo();
        });
        
        // –ù–∞–≤–∏–≥–∞—Ü–∏—è
        document.getElementById('matches-btn')?.addEventListener('click', () => {
            this.showMatches();
        });
        
        document.getElementById('back-from-matches')?.addEventListener('click', () => {
            this.showScreen('main-app');
        });
        
        // –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
        document.querySelectorAll('.modal .close').forEach(btn => {
            btn.addEventListener('click', (e) => {
                e.target.closest('.modal').classList.remove('active');
            });
        });
    }
    
    setupProfileForm() {
        // –ü—Ä–æ—Å—Ç–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–≥—Ä
        const gamesContainer = document.getElementById('games-selector');
        if (gamesContainer) {
            const games = ['Counter-Strike 2', 'Valorant', 'Dota 2', 'League of Legends', 'Mobile Legends'];
            
            gamesContainer.innerHTML = games.map(game => 
                `<div class="game-option" data-game="${game}">${game}</div>`
            ).join('');
            
            gamesContainer.addEventListener('click', (e) => {
                if (e.target.classList.contains('game-option')) {
                    e.target.classList.toggle('selected');
                }
            });
        }
    }
    
    createProfile() {
        const formData = new FormData(document.getElementById('profile-form'));
        const selectedGames = Array.from(document.querySelectorAll('.game-option.selected'))
            .map(el => el.dataset.game);
        
        this.currentUser = {
            display_name: formData.get('display-name') || document.getElementById('display-name').value,
            age_group: formData.get('age-group') || document.getElementById('age-group').value,
            bio: formData.get('bio') || document.getElementById('bio').value,
            games: selectedGames,
            looking_for: formData.get('looking-for') || document.getElementById('looking-for').value,
            discord: formData.get('discord') || document.getElementById('discord').value
        };
        
        if (!this.currentUser.display_name || !this.currentUser.age_group || 
            !this.currentUser.bio || selectedGames.length === 0) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!');
            return;
        }
        
        console.log('–ü—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω:', this.currentUser);
        this.showScreen('main-app');
        this.showNextPlayer();
    }
    
    showNextPlayer() {
        if (this.currentPlayerIndex >= this.currentPlayers.length) {
            this.showNoMorePlayers();
            return;
        }
        
        const player = this.currentPlayers[this.currentPlayerIndex];
        this.displayPlayer(player);
    }
    
    displayPlayer(player) {
        const cardsContainer = document.getElementById('cards-stack');
        if (!cardsContainer) return;
        
        cardsContainer.innerHTML = '';
        
        const gamesHtml = player.games.map(game => 
            `<span class="game-tag">${game.emoji} ${game.name}</span>`
        ).join('');
        
        const playTimes = player.play_times.join(', ');
        
        const cardHtml = `
            <div class="player-card" data-player-id="${player.user_id}">
                <div class="card-header">
                    <div class="player-name">${player.display_name}</div>
                    <div class="player-meta">${player.age_group} ‚Ä¢ ${player.looking_for}</div>
                    <div class="player-games">${gamesHtml}</div>
                </div>
                
                <div class="card-body">
                    <div class="player-bio">${player.bio}</div>
                    
                    <div class="player-details">
                        <div class="detail-row">
                            <span class="detail-icon">üïê</span>
                            <span>–ò–≥—Ä–∞–µ—Ç ${playTimes}</span>
                        </div>
                    </div>
                </div>
            </div>
        `;
        
        cardsContainer.innerHTML = cardHtml;
    }
    
    likePlayer() {
        const currentPlayer = this.currentPlayers[this.currentPlayerIndex];
        if (!currentPlayer) return;
        
        console.log('–õ–∞–π–∫ –∏–≥—Ä–æ–∫—É:', currentPlayer.display_name);
        
        // –°–∏–º—É–ª–∏—Ä—É–µ–º –º—ç—Ç—á (50% —à–∞–Ω—Å)
        if (Math.random() > 0.5) {
            this.matches.push(currentPlayer);
            this.showMatch(currentPlayer);
        }
        
        this.nextPlayer();
    }
    
    dislikePlayer() {
        console.log('–î–∏–∑–ª–∞–π–∫ –∏–≥—Ä–æ–∫—É');
        this.nextPlayer();
    }
    
    nextPlayer() {
        this.currentPlayerIndex++;
        
        // –ê–Ω–∏–º–∞—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏
        const card = document.querySelector('.player-card');
        if (card) {
            card.style.transform = 'translateX(100%) rotate(30deg)';
            card.style.opacity = '0';
            
            setTimeout(() => {
                this.showNextPlayer();
            }, 300);
        } else {
            this.showNextPlayer();
        }
    }
    
    showMatch(player) {
        const notification = document.getElementById('match-notification');
        if (notification) {
            notification.querySelector('.match-content').innerHTML = `
                <h3>üéâ –≠—Ç–æ –º—ç—Ç—á!</h3>
                <p>–£ –≤–∞—Å –≤–∑–∞–∏–º–Ω—ã–π –ª–∞–π–∫ —Å <strong>${player.display_name}</strong>!</p>
                <p>Discord: ${player.contacts.discord || '–ù–µ —É–∫–∞–∑–∞–Ω'}</p>
                <button class="btn btn-primary" onclick="this.closest('.match-notification').classList.remove('show')">–û—Ç–ª–∏—á–Ω–æ!</button>
            `;
            
            notification.classList.add('show');
            
            setTimeout(() => {
                notification.classList.remove('show');
            }, 5000);
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –º—ç—Ç—á–µ–π
        document.getElementById('matches-count').textContent = this.matches.length;
    }
    
    showMatches() {
        const matchesList = document.getElementById('matches-list');
        if (!matchesList) return;
        
        if (this.matches.length === 0) {
            matchesList.innerHTML = `
                <div style="text-align: center; padding: 40px 20px;">
                    <h3>üíî –ü–æ–∫–∞ –Ω–µ—Ç –º—ç—Ç—á–µ–π</h3>
                    <p>–ü—Ä–æ–¥–æ–ª–∂–∞–π —Å–≤–∞–π–ø–∞—Ç—å!</p>
                </div>
            `;
        } else {
            matchesList.innerHTML = this.matches.map(match => `
                <div class="match-item">
                    <div class="match-avatar">
                        ${match.display_name.charAt(0).toUpperCase()}
                    </div>
                    <div class="match-info">
                        <div class="match-name">${match.display_name}</div>
                        <div class="match-games">
                            ${match.games.map(g => g.emoji).join(' ')} 
                            ${match.games.map(g => g.name).slice(0, 2).join(', ')}
                        </div>
                        <div style="margin-top: 8px; font-size: 0.85rem;">
                            Discord: ${match.contacts.discord || '–ù–µ —É–∫–∞–∑–∞–Ω'}
                        </div>
                    </div>
                </div>
            `).join('');
        }
        
        this.showScreen('matches-screen');
    }
    
    showPlayerInfo() {
        const currentPlayer = this.currentPlayers[this.currentPlayerIndex];
        if (!currentPlayer) return;
        
        alert(`–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–≥—Ä–æ–∫–µ: ${currentPlayer.display_name}\\n\\n${currentPlayer.bio}\\n\\n–ö–æ–Ω—Ç–∞–∫—Ç—ã: ${currentPlayer.contacts.discord || '–ù–µ —É–∫–∞–∑–∞–Ω—ã'}`);
    }
    
    showNoMorePlayers() {
        document.getElementById('no-cards')?.classList.remove('hidden');
    }
    
    showScreen(screenId) {
        document.querySelectorAll('.screen').forEach(screen => {
            screen.classList.remove('active');
        });
        
        document.getElementById(screenId)?.classList.add('active');
    }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', () => {
    window.app = new StandaloneApp();
});
'''
    
    # –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º app.js
    with open('docs/js/app.js', 'w', encoding='utf-8') as f:
        f.write(standalone_js)
    
    # –û–±–Ω–æ–≤–ª—è–µ–º index.html –¥–ª—è –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–π –≤–µ—Ä—Å–∏–∏
    update_index_html()

def update_index_html():
    """–û–±–Ω–æ–≤–∏—Ç—å index.html –¥–ª—è –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–π —Ä–∞–±–æ—Ç—ã"""
    
    html_content = '''<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
    <title>TeammatesFinder</title>
    <script src="https://telegram.org/js/telegram-web-app.js"></script>
    <link rel="stylesheet" href="css/style.css">
</head>
<body>
    <!-- –≠–∫—Ä–∞–Ω —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è -->
    <div id="profile-setup" class="screen active">
        <div class="container">
            <h2>üéÆ –°–æ–∑–¥–∞–π —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å</h2>
            <form id="profile-form">
                <div class="form-group">
                    <label>–ò–≥—Ä–æ–≤–æ–π –Ω–∏–∫:</label>
                    <input type="text" id="display-name" placeholder="–¢–≤–æ–π –Ω–∏–∫ –≤ –∏–≥—Ä–∞—Ö" required>
                </div>
                
                <div class="form-group">
                    <label>–í–æ–∑—Ä–∞—Å—Ç:</label>
                    <select id="age-group" required>
                        <option value="">–í—ã–±–µ—Ä–∏ –≤–æ–∑—Ä–∞—Å—Ç</option>
                        <option value="16-20">16-20</option>
                        <option value="21-25">21-25</option>
                        <option value="26-30">26-30</option>
                        <option value="31-35">31-35</option>
                        <option value="36+">36+</option>
                    </select>
                </div>
                
                <div class="form-group">
                    <label>–û —Å–µ–±–µ:</label>
                    <textarea id="bio" placeholder="–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ, —Å—Ç–∏–ª–µ –∏–≥—Ä—ã, —Ü–µ–ª—è—Ö..." maxlength="200"></textarea>
                </div>
                
                <div class="form-group">
                    <label>–û—Å–Ω–æ–≤–Ω—ã–µ –∏–≥—Ä—ã:</label>
                    <div id="games-selector" class="games-grid">
                        <!-- –ò–≥—Ä—ã –¥–æ–±–∞–≤—è—Ç—Å—è —á–µ—Ä–µ–∑ JS -->
                    </div>
                </div>
                
                <div class="form-group">
                    <label>–ß—Ç–æ –∏—â–µ—à—å:</label>
                    <select id="looking-for" required>
                        <option value="">–í—ã–±–µ—Ä–∏ —Ü–µ–ª—å</option>
                        <option value="–ö–æ–º–∞–Ω–¥–∞">üèÜ –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ä–µ–π—Ç–∏–Ω–≥–∞</option>
                        <option value="–î—É–æ">üë• –ù–∞–ø–∞—Ä–Ω–∏–∫ –¥–ª—è –¥—É–æ</option>
                        <option value="–ö–æ–º–ø–∞–Ω–∏—è">üòÑ –ö–æ–º–ø–∞–Ω–∏—è –¥–ª—è —Ñ–∞–Ω–∞</option>
                    </select>
                </div>
                
                <div class="form-group">
                    <label>Discord:</label>
                    <input type="text" id="discord" placeholder="Username#1234">
                </div>
                
                <button type="submit" class="btn btn-primary">
                    –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å üöÄ
                </button>
            </form>
        </div>
    </div>

    <!-- –ì–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω —Å–æ —Å–≤–∞–π–ø–∞–º–∏ -->
    <div id="main-app" class="screen">
        <header class="app-header">
            <h1>üéÆ TeammatesFinder</h1>
            <div class="header-actions">
                <button id="matches-btn" class="icon-btn">
                    <span class="icon">üíï</span>
                    <span class="badge" id="matches-count">0</span>
                </button>
            </div>
        </header>

        <div class="cards-container">
            <div id="cards-stack">
                <!-- –ö–∞—Ä—Ç–æ—á–∫–∏ –∏–≥—Ä–æ–∫–æ–≤ -->
            </div>
            
            <div id="no-cards" class="no-cards hidden">
                <div class="no-cards-content">
                    <h3>üéâ –í—Å–µ –∏–≥—Ä–æ–∫–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω—ã!</h3>
                    <p>–≠—Ç–æ –¥–µ–º–æ –≤–µ—Ä—Å–∏—è TeammatesFinder</p>
                </div>
            </div>
        </div>

        <div class="action-buttons">
            <button id="dislike-btn" class="action-btn dislike">
                <span class="icon">‚ùå</span>
            </button>
            <button id="info-btn" class="action-btn info">
                <span class="icon">‚ÑπÔ∏è</span>
            </button>
            <button id="like-btn" class="action-btn like">
                <span class="icon">‚ù§Ô∏è</span>
            </button>
        </div>
    </div>

    <!-- –≠–∫—Ä–∞–Ω –º—ç—Ç—á–µ–π -->
    <div id="matches-screen" class="screen">
        <header class="screen-header">
            <button id="back-from-matches" class="back-btn">‚Üê –ù–∞–∑–∞–¥</button>
            <h2>üíï –¢–≤–æ–∏ –º—ç—Ç—á–∏</h2>
        </header>
        <div class="container">
            <div id="matches-list"></div>
        </div>
    </div>

    <!-- –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –º—ç—Ç—á–µ -->
    <div id="match-notification" class="match-notification">
        <div class="match-content">
            <h3>üéâ –≠—Ç–æ –º—ç—Ç—á!</h3>
            <p>–£ –≤–∞—Å –≤–∑–∞–∏–º–Ω—ã–π –ª–∞–π–∫!</p>
        </div>
    </div>

    <script src="data.js"></script>
    <script src="js/app.js"></script>
</body>
</html>'''
    
    with open('docs/index.html', 'w', encoding='utf-8') as f:
        f.write(html_content)

if __name__ == '__main__':
    create_static_version()
