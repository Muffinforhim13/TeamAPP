#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ë–∞–∑–æ–≤—ã–π Telegram Bot –¥–ª—è TeammatesFinder
–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–æ—Å—Ç–∞—è –≤–µ—Ä—Å–∏—è –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
"""

import os
import sys
import time
import requests
import json
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º .env
load_dotenv()

BOT_TOKEN = os.getenv('BOT_TOKEN')
WEBAPP_URL = os.getenv('WEBAPP_URL', 'http://localhost:5000')

if not BOT_TOKEN or BOT_TOKEN == 'YOUR_BOT_TOKEN_HERE':
    print("‚ùå –û—à–∏–±–∫–∞: BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
    sys.exit(1)

class SimpleTelegramBot:
    def __init__(self, token):
        self.token = token
        self.api_url = f"https://api.telegram.org/bot{token}"
        self.offset = 0
    
    def send_message(self, chat_id, text, reply_markup=None):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è"""
        url = f"{self.api_url}/sendMessage"
        data = {
            'chat_id': chat_id,
            'text': text,
            'parse_mode': 'HTML'
        }
        
        if reply_markup:
            data['reply_markup'] = json.dumps(reply_markup)
        
        try:
            response = requests.post(url, data=data)
            return response.json()
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            return None
    
    def get_updates(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π"""
        url = f"{self.api_url}/getUpdates"
        data = {'offset': self.offset, 'timeout': 30}
        
        try:
            response = requests.post(url, data=data)
            return response.json()
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {e}")
            return None
    
    def handle_message(self, message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è"""
        chat_id = message['chat']['id']
        text = message.get('text', '')
        user = message.get('from', {})
        first_name = user.get('first_name', '–ò–≥—Ä–æ–∫')
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
        if text == '/start':
            welcome_text = f"""
üéÆ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ TeammatesFinder!</b>

–ü—Ä–∏–≤–µ—Ç, {first_name}! 

–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –Ω–∞–π—Ç–∏ —Ç–∏–º–º–µ–π—Ç–æ–≤ –¥–ª—è –∏–≥—Ä!

üåê <b>–í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:</b>
<a href="{WEBAPP_URL}">–û—Ç–∫—Ä—ã—Ç—å TeammatesFinder</a>

<b>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –∏–≥—Ä—ã:</b>
üî¥ Dota 2
üî´ Counter-Strike 2  
‚ö° Valorant
‚öîÔ∏è Mobile Legends
‚ö° League of Legends

<b>–ö–æ–º–∞–Ω–¥—ã:</b>
/start - —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
/app - —Å—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
/help - –ø–æ–º–æ—â—å
"""
            
            keyboard = {
                "inline_keyboard": [
                    [{"text": "üéÆ –û—Ç–∫—Ä—ã—Ç—å TeammatesFinder", "url": WEBAPP_URL}]
                ]
            }
            
            self.send_message(chat_id, welcome_text, keyboard)
            
        elif text == '/app':
            app_text = f"""
üöÄ <b>TeammatesFinder</b>

–û—Ç–∫—Ä–æ–π –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–∏–º–º–µ–π—Ç–æ–≤:
<a href="{WEBAPP_URL}">–ù–∞–∂–º–∏ –∑–¥–µ—Å—å</a>

–ò–ª–∏ —Å–∫–æ–ø–∏—Ä—É–π —Å—Å—ã–ª–∫—É: {WEBAPP_URL}
"""
            
            keyboard = {
                "inline_keyboard": [
                    [{"text": "üéÆ –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", "url": WEBAPP_URL}]
                ]
            }
            
            self.send_message(chat_id, app_text, keyboard)
            
        elif text == '/help':
            help_text = f"""
‚ùì <b>–ü–æ–º–æ—â—å –ø–æ TeammatesFinder</b>

<b>–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:</b>
1. –û—Ç–∫—Ä–æ–π –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: <a href="{WEBAPP_URL}">TeammatesFinder</a>
2. –°–æ–∑–¥–∞–π —Å–≤–æ–π –∏–≥—Ä–æ–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å
3. –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–π –ø—Ä–æ—Ñ–∏–ª–∏ –¥—Ä—É–≥–∏—Ö –∏–≥—Ä–æ–∫–æ–≤
4. –õ–∞–π–∫–∞–π —Ç–µ—Ö, —Å –∫–µ–º —Ö–æ—á–µ—à—å –∏–≥—Ä–∞—Ç—å
5. –ü—Ä–∏ –≤–∑–∞–∏–º–Ω–æ–º –ª–∞–π–∫–µ –ø–æ–ª—É—á–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã!

<b>–ö–æ–º–∞–Ω–¥—ã:</b>
/start - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/app - —Å—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
/help - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

<b>–í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:</b> {WEBAPP_URL}
"""
            
            keyboard = {
                "inline_keyboard": [
                    [{"text": "üéÆ –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", "url": WEBAPP_URL}]
                ]
            }
            
            self.send_message(chat_id, help_text, keyboard)
            
        else:
            # –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
            unknown_text = f"""
‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {text}

<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/start - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/app - –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
/help - —Å–ø—Ä–∞–≤–∫–∞

–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –æ—Ç–∫—Ä–æ–π –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:
<a href="{WEBAPP_URL}">TeammatesFinder</a>
"""
            
            keyboard = {
                "inline_keyboard": [
                    [{"text": "üéÆ –û—Ç–∫—Ä—ã—Ç—å TeammatesFinder", "url": WEBAPP_URL}]
                ]
            }
            
            self.send_message(chat_id, unknown_text, keyboard)
    
    def run(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        print("=> TeammatesFinder Bot –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
        print(f"=> –í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: {WEBAPP_URL}")
        print("=> –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
        print("=> –û—Ç–ø—Ä–∞–≤—å—Ç–µ /start –±–æ—Ç—É –≤ Telegram")
        print("=> –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
        
        try:
            while True:
                updates = self.get_updates()
                
                if updates and updates.get('ok'):
                    for update in updates['result']:
                        self.offset = update['update_id'] + 1
                        
                        if 'message' in update:
                            self.handle_message(update['message'])
                
                time.sleep(1)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
                
        except KeyboardInterrupt:
            print("\n=> –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞: {e}")

def main():
    bot = SimpleTelegramBot(BOT_TOKEN)
    bot.run()

if __name__ == '__main__':
    main()
